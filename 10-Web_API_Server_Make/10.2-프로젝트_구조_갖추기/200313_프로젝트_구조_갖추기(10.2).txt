* 프로젝트 구조 갖추기
    + 프로젝트 파일 작업 순서 및 메모
        1. /nodebird-api/package.json   (생성 및 작성)
            +) npm init 으로 생성해도 됨.
        2. cmd
            1) nodebird-api 경로로 이동 후
                npm install
        3. NodeBird 프로젝트에서 내용물 복사 리스트
            1) config, models, passport 폴더 전부
            2) routes 폴더
                /auth.js  
                /middleware.js
            3) .env 파일 복사   
        4.  /nodebird-api/views/error.pug       (생성)
        5.  /nodebird-api/app.js                (생성)
        6.  /nodebird-api/models/domain.js      (생성)
        7.  /nodebird-api/models/index.js       (수정)
        8. /nodebird-api/views/login.pug        (생성)
        9. /nodebird-api/routes/index.js        (생성)
            1) uuid는 범용 고유 식별자로 고유한 문자열을 만들고 싶을 때 사용
                - 완벽하게 고유하진 않지만 실제 사용 시 중복될 가능성은 거의 없음
    
    + nodebird-api 실행
        1. nodebird 프로젝트에 등록된 계정으로 nodebird-api 로그인
        2. 로그인 후엔 도메인 등록 화면이 나옴.
            1) 도메인을 등록하는 이유는 등록한 도메인에서만 API를 사용할 수 있게 하기 위해.
                - 웹 브라우저에서 요청을 보낼 때, 응답 하는 곳과 도메인이 다르면 CORS 에러가 발생할 수도.
                    > CORS: Cross-Origin Resource Sharing
        3. "localhost:8003" (옵션: 무료) 등록
                    

