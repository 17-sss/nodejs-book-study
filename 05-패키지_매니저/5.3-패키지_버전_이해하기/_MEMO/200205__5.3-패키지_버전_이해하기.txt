// [5.3] 패키지 버전 이해하기 :: 메모

* Semver는 Semantic Versioning(유의적 버전)의 약어. 
    버전을 구성하는 세자리가 모두 의미를 가지고 있다는 뜻


* (버전 정보 샘플) 1.0.7
    1) 첫 번째 자리는 major 버전, major 버전은 하위 호환이 안 될 정도로 
        패키지 내용이 수정되었을 때 올림.
        - 주 버전이 0이면 초기 개발 중이라는 뜻
        - 1부터 정식 버전
    2) 두 번째 자리는 minor 버전, minor 버전은 하위 호환이 되는 기능 업데이트시 올림
    3) 세 번째 자리는 patch 버전, 기존 기능에 문제가 있어 수정한 것을 내놓을 시 patch 버전을 올림


* 주의 및 참고사항
    + 수정사항이 생기면 major 버전, minor 버전, patch 버전 중 하나를 의미에 맞게 올려서 새로운 버전으로 배포
    + 버전 앞에 ^나 ~또는 >,< 같은 문자: 이 문자는 버전에 포함되지 않지만 설치 또는 업데이트 시 어떤 버전을 설치해야하는지 알려줌.    
        - 기호 ^: minor 버전까지만 설치 또는 업데이트
            ex) npm i express@^1.1.1
                1.1.1 <= 2.0.0까지 설치됨 (2.0.0은 설치되지않음)
        - 기호 ~: patch 버전까지만 설치 또는 업데이트
            ex) npm i express@~1.1.1
                1.1.1 <= 버전 < 1.2.0 까지 설치됨 (1.2.0은 설치되지않음)
        - 각종 기호: >, <, >=, <=, =
            ex) npm i express@>1.1.1
                반드시 1.1.1 버전 보다 높은 버전이 설치됨
        - @latest
            ex) npm i express@latest   (or)  npm i express@x
                항상 최신 버전의 패키지 설치